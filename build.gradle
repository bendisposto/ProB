// to trigger a full tycho build please use 'gradle deleteFromClassPath completeInstall'

project.ext {
	targetRepositories = [
		"https://download.eclipse.org/releases/luna/",
		"https://rodin-b-sharp.sourceforge.net/updates",
		"https://stups.hhu-hosting.de/buildlibs/org.rodinp.dev/",
	]

	groupID = "de.prob"
}

apply from: 'tycho_build.gradle'

project(':de.prob.core') {
	apply plugin: "java"

	repositories {
		mavenCentral()
	}

	def parser_version = '2.12.4'

	dependencies {
		// Note: After changing/updating dependencies or their versions here,
		// you also need to update the corresponding entries in META-INF/MANIFEST.MF!
		// To be safe, you should probably also update the Eclipse .classpath file
		// (it might be used by the Tycho build - not sure).
		implementation group: "de.hhu.stups", name: "answerparser", version: parser_version
		implementation group: "de.hhu.stups", name: "bparser", version: parser_version
		implementation group: "de.hhu.stups", name: "ltlparser", version: parser_version
		implementation group: "de.hhu.stups", name: "parserbase", version: parser_version
		implementation group: "de.hhu.stups", name: "prologlib", version: parser_version
		implementation group: "de.hhu.stups", name: "unicode", version: parser_version
		implementation group: "de.hhu.stups", name: "theorymapping", version: parser_version
		implementation 'commons-lang:commons-lang:2.6'
		implementation 'commons-codec:commons-codec:1.8'
		implementation 'com.thoughtworks.xstream:xstream:1.4.19'
		// Current versions of XStream depend on MXParser, but not any specific version of it.
		// To avoid the version number changing unexpectedly and breaking the MANIFEST.MF classpath entries,
		// hardcode a specific MXParser version here.
		// It *should* be safe to update this when a new version is released.
		implementation group: 'io.github.x-stream', name: 'mxparser', version: '1.2.2'
		implementation group: 'net.java.dev.jna', name: 'jna', version: '3.4.0'
		implementation group: 'de.hhu.stups', name: 'ptolemy-jfmi', version: '1.1.0'
	}
}

project(':de.prob.ui') {
	repositories {
		mavenCentral()
	}
	dependencies {
		implementation 'commons-codec:commons-codec:1.8'
	}
}


def download(address,target) {
	def file = new FileOutputStream(target)
	def out = new BufferedOutputStream(file)
	out << new URL(address).openStream()
	out.close()
}

task downloadCli {
	doLast{
		def dir = workspacePath + 'de.prob.core/prob/'
		delete file(dir)
		new File(dir).mkdirs()

		['macos':'macos','linux64':'linux64','win64':'windows'].each {
			def n = it.getKey()

			def targetdir = dir + it.getValue()
			def targetzip = dir + "probcli_${n}.zip"
			def url = "https://stups.hhu-hosting.de/downloads/prob/cli/releases/1.12.1/probcli_${n}.zip"
			download(url, targetzip)
			FileTree zip = zipTree(targetzip)
			copy {
				from zip
				into targetdir
			}
			delete file(targetzip)
		}
	}
}


completeInstall.dependsOn downloadCli
